{"version":3,"sources":["enums.js","event.class.js","core.js","index.js"],"names":["TIME_UNIT","MILLISECOND","SECOND","MINUT","HOUR","TIME_UNIT_VALUE","TIME_UNIT_TEXT","Event","timeTrigger","callback","timeUnit","triggered","timerId","uuid","generateUUID","replace","c","r","Math","random","v","toString","Chronologie","showLogs","events","timestampStart","timestampEnd","messages","console","log","join","event","Error","push","Date","now","intervalId","length","forEach","evt","setTimeout","clearTimeout","isAllEventsTriggered","stop","convertToMillisecondes","findIndex","value","unit","result","filter","start","module","exports","ChronologieEvent"],"mappings":"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","file":"index.js","sourceRoot":"..\\src","sourcesContent":["export const TIME_UNIT = {\r\n    MILLISECOND: 'MILLISECOND',\r\n    SECOND: 'SECOND',\r\n    MINUT: 'MINUT',\r\n    HOUR: 'HOUR'\r\n}\r\n\r\nexport const TIME_UNIT_VALUE = {\r\n    MILLISECOND: 1,\r\n    SECOND: 1000,\r\n    MINUT: 60000,\r\n    HOUR: 3600000\r\n}\r\n\r\nexport const TIME_UNIT_TEXT = {\r\n    MILLISECOND: 'ms',\r\n    SECOND: 's',\r\n    MINUT: 'mn',\r\n    HOUR: 'h'\r\n}","import { TIME_UNIT } from './enums'\r\n\r\nexport default class Event {\r\n    constructor(timeTrigger, callback, timeUnit) {\r\n        this.timeTrigger = timeTrigger\r\n        this.timeUnit = timeUnit || TIME_UNIT.MILLISECOND\r\n        this.callback = callback\r\n        this.triggered = false\r\n        this.timerId = null\r\n        this.uuid = generateUUID()\r\n    }\r\n}\r\n\r\nfunction generateUUID() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8)\r\n        return v.toString(16)\r\n    })\r\n}","import { TIME_UNIT_VALUE, TIME_UNIT } from './enums'\r\n\r\nexport default class Chronologie {\r\n    constructor (showLogs) {\r\n        this.events = []\r\n        this.timestampStart = null\r\n        this.timestampEnd = null\r\n        this.showLogs = showLogs ?? false\r\n    }\r\n\r\n    log (...messages) {\r\n        if (messages && this.showLogs) console.log(messages.join(' '))\r\n    }\r\n\r\n    addEvent (event) {\r\n        if (!event?.timeTrigger) {\r\n            throw Error('Event format unvalid. Missing \\'timeTrigger\\' attribute.')\r\n            return\r\n        }\r\n\r\n        if (!event?.callback) {\r\n            throw Error('Event format unvalid. Missing \\'callback\\' function.')\r\n            return\r\n        }\r\n\r\n        this.events.push(event)\r\n    }\r\n\r\n    start () {\r\n        this.timestampStart = Date.now()\r\n        this.log('ChronologieJS : START', this.timestampStart, 'ms')\r\n        if (this.intervalId) {\r\n            throw Error('You already start the chronologie.')\r\n            return\r\n        }\r\n\r\n        if (this.events?.length === 0) {\r\n            throw Error('You have no events set. Use the addEvent() method.')\r\n            return\r\n        }\r\n\r\n        this.events.forEach(evt => {\r\n            evt.timerId = setTimeout(() => {\r\n                this.log('ChronologieJS: event', evt.uuid ,' triggered at ', Date.now())\r\n                evt.callback()\r\n                evt.triggered = true\r\n                clearTimeout(evt.timerId)\r\n                if(this.isAllEventsTriggered()) {\r\n                    this.stop()\r\n                }\r\n                clearTimeout(evt.timerId)\r\n            }, this.convertToMillisecondes(evt.timeTrigger, evt.timeUnit))\r\n        })\r\n    }\r\n\r\n    isAllEventsTriggered () {\r\n        return this.events.findIndex(evt => evt.triggered === false) === -1\r\n    }\r\n\r\n    convertToMillisecondes (value, unit) {\r\n        let result = value\r\n        switch (unit) {\r\n            case TIME_UNIT.SECOND: \r\n                result = value * TIME_UNIT_VALUE.SECOND\r\n                break;\r\n            case TIME_UNIT.MINUT: \r\n                result = (value*60) * TIME_UNIT_VALUE.SECOND\r\n                break;\r\n            case TIME_UNIT.HOUR: \r\n                result = ((value*60)*60) * TIME_UNIT_VALUE.SECOND\r\n                break;\r\n        }\r\n        return result\r\n    } \r\n\r\n    isStarted () {\r\n        return !!this.intervalId\r\n    }\r\n\r\n    stop () {\r\n        this.timestampEnd = Date.now()\r\n        this.log('ChronologieJS: STOP duration ', (this.timestampEnd - this.timestampStart), 'ms')\r\n        this.events.filter(evt => evt.triggered === false)\r\n        ?.forEach(evt => {\r\n            clearTimeout(evt.timerId)\r\n        })\r\n\r\n        this.events.filter(evt => evt.triggered === true)\r\n        ?.forEach(evt => {\r\n            evt.triggered = false\r\n        })\r\n    }\r\n\r\n    restart () {\r\n        this.stop()\r\n        this.start()\r\n    }\r\n}","import { TIME_UNIT, TIME_UNIT_TEXT, TIME_UNIT_VALUE } from './enums'\r\nimport ChronologieEvent from './event.class'\r\nimport Chronologie from './core'\r\n\r\nmodule.exports = {\r\n    TIME_UNIT,\r\n    TIME_UNIT_TEXT,\r\n    TIME_UNIT_VALUE,\r\n    ChronologieEvent,\r\n    Chronologie\r\n}"]}